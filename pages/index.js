import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useState, useRef, useEffect } from 'react'

const Dropdown = ({ label, values, selectedValue, changeHandler }) => (
  <div className={styles.colcontainer}>
    <p>{label}</p>
    <select value={selectedValue} onChange={changeHandler}>
      {values.map(value =>
        <option value={value} key={value}>{value}</option>
      )}
    </select>
  </div>
)

export default function Home() {
  const [alpha, setAlpha] = useState(0)
  const alphaString = alpha.toFixed(1)

  const audioRef = useRef()

  const [sourceInstrument, setSourceInstrument] = useState('Piano')
  const [targetInstrument, setTargetInstrument] = useState('Cello')
  const instrumentShortNames = {
    'French horn': 'Fhn', 'Trumpet': 'Trop', 'Piano': 'Pno', 'Cello': 'Vc'
  }
  const instrumentNotes = {
    'Piano': ['B3', 'G6', 'F3', 'D3'],
    'Cello': ['B3', 'D5', 'F3'],
    'French horn': ['D5'],
    'Trumpet': ['D5', 'F3']
  }
  const notes = instrumentNotes[sourceInstrument]
  const [currentNote, setCurrentNote] = useState(notes[0])

  useEffect(() => {
    setCurrentNote(instrumentNotes[sourceInstrument][0])
    updateAudioPlayback()
  }, [sourceInstrument])

  const instruments = Object.keys(instrumentShortNames)
  const sourceInstrumentShort = instrumentShortNames[sourceInstrument]
  const targetInstrumentShort = instrumentShortNames[targetInstrument]
  const filenameNoExt = `/interpolation_samples/${sourceInstrumentShort}_${targetInstrumentShort}_${alphaString}_${currentNote}`

  const updateAudioPlayback = () => {
    if (audioRef.current) {
      audioRef.current.pause()
      audioRef.current.load()
      audioRef.current.play()
    }
  }
  const updateInterpolationAlpha = (e) => {
    setAlpha(parseFloat(e.target.value))
    updateAudioPlayback()
  }
  const updateInterpolationSource = (e) => {
    setSourceInstrument(e.target.value)
    updateAudioPlayback()
  }
  const updateInterpolationTarget = (e) => {
    setTargetInstrument(e.target.value)
    updateAudioPlayback()
  }
  const updateInterpolationNote = (e) => {
    setCurrentNote(e.target.value)
    updateAudioPlayback()
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Interactive Timbre Interpolation</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Interactive Timbre Interpolation
        </h1>

        <p className={styles.description}>Ketan Agrawal &bull; Music 220c Final Project</p>


        <Dropdown
          label="Note: "
          values={notes}
          selectedValue={currentNote}
          changeHandler={updateInterpolationNote}
        />
        <div className={styles.rowcontainer}>
          <Dropdown
            label="Source instrument: "
            values={instruments}
            selectedValue={sourceInstrument}
            changeHandler={updateInterpolationSource}
          />
          <Image src={`${filenameNoExt}.png`} alt="Spectrogram of audio" width={250} height={162} />
          <Dropdown
            label="Target instrument: "
            values={instruments}
            selectedValue={targetInstrument}
            changeHandler={updateInterpolationTarget}
          />
        </div>
        <audio controls ref={audioRef}>
          <source src={`${filenameNoExt}.wav`} type="audio/wav" />
          Your browser does not support the <code>audio</code> element.
        </audio>
        <input type="range" min={0} max={1} step={0.1} value={alpha} onChange={updateInterpolationAlpha} />
        <p>{alpha.toFixed(1)}</p>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
